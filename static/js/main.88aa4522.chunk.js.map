{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","ExpenseItem","useState","title","amount","ExpenseFilter","id","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","floor","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpenseChart","chartDataPoints","expenses","expense","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","selectedYear","length","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","console","log","onSaveExpenseData","type","min","step","NewExpense","eneteredExpensedata","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88aa4522.chunk.js","sourcesContent":["import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US',{month:'long'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n         <div className=\"expense-date__day\">{day}</div>\r\n         <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import React,{useState} from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nfunction ExpenseItem(props){\r\n  const [title,setTitle] = useState(props.title);\r\n\r\n    // const clickHandler = ()=>{\r\n    //     setTitle('Updated!');\r\n    //     console.log(title);\r\n    // }\r\n   \r\n    return (\r\n       \r\n           <div className=\"expense-item\">\r\n               <ExpenseDate date={props.date}/>\r\n               <div className=\"expense-item__description\">\r\n               <h1>{props.title}</h1>\r\n               </div>\r\n               <div className=\"expense-item__price\">Rs{props.amount}</div>\r\n           </div>\r\n      \r\n    );\r\n}\r\n\r\nexport default  ExpenseItem;","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label><span id=\"filterbyYear\">Filter by year</span></label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2023\">2023</option>\r\n\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue  > 0){\r\n        barFillHeight = Math.floor((props.value/props.maxValue)*100) + '%';\r\n    }\r\nreturn(\r\n    <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n        key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpenseChart = props => {\r\n  const chartDataPoints = [\r\n      {label:'Jan',value:0},\r\n      {label:'Feb',value:0},\r\n      {label:'Mar',value:0},\r\n      {label:'Apr',value:0},\r\n      {label:'May',value:0},\r\n      {label:'Jun',value:0},\r\n      {label:'Jul',value:0},\r\n      {label:'Aug',value:0},\r\n      {label:'Sep',value:0},\r\n      {label:'Oct',value:0},\r\n      {label:'Nov',value:0},\r\n      {label:'Dec',value:0},\r\n\r\n  ];\r\n\r\n  for(const expense of props.expenses){\r\n      const expenseMonth = expense.date.getMonth();\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints = {chartDataPoints}/>\r\n}\r\n\r\nexport default ExpenseChart;","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <div className=\"expenses\">\r\n     \r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n       <ExpenseChart expenses={filteredExpenses}  />\r\n      {filteredExpenses.length === 0 ? <p>No expenses Found</p> :\r\n      filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\nconst [enteredTitle,setEnteredTitle] = useState('');\r\nconst [enteredAmount,setEnteredAmount] = useState('');\r\nconst [enteredDate,setEnteredDate] = useState('');\r\n   \r\nconst titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n\r\nconst amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n};\r\n\r\nconst dateChangeHandler = (event) =>{\r\n        setEnteredDate(event.target.value);\r\n\r\n};\r\n\r\nconst submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n        title:enteredTitle,\r\n        amount:+enteredAmount,\r\n        date:new Date(enteredDate)\r\n    };\r\n\r\n    console.log(expenseData);\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n};\r\n\r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n             <div className=\"heading\">Expense Tracking Application</div>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\"  value ={enteredTitle} onChange={titleChangeHandler}/>\r\n                </div>\r\n\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n                </div>\r\n\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2023-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props)=>{\r\n\r\n    const saveExpenseDataHandler = (eneteredExpensedata) =>{\r\n       const expenseData = {\r\n        ...eneteredExpensedata,\r\n        id: Math.random().toString()\r\n       };\r\n    //    console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n        \r\n    };\r\n    return(\r\n        <div className=\"new-expense\">\r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React,{useState} from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Paper\",\n    amount: 5.12,\n    date: new Date(2021, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses,setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense =>{\n    setExpenses((prevExpenses) =>{\n        return [expense,...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}></Expenses>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}